(undo-tree-save-format-version . 1)
"f7b67366dc2e32940261ef0b483e7e6d920e2892"
[nil nil nil nil (26452 30429 386745 0) 0 nil]
([nil nil ((2815 . 2816) (t 26452 30381 791023 777000)) nil (26452 30429 386744 0) 0 nil])
([nil nil ((#("'" 0 1 (fontified t)) . 2815)) nil (26452 30429 386742 0) 0 nil])
([nil nil ((2815 . 2816) (t 26452 30381 791023 777000)) nil (26452 30429 386734 0) 0 nil])
([nil nil ((3156 . 3724)) nil (26452 30434 107159 0) 0 nil])
([nil nil ((2732 . 2736) (2729 . 2732) (t 26452 30434 108323 217000) 2722) nil (26452 30476 776563 0) 0 nil])
([nil nil ((#("
  " 0 1 (fontified t) 1 3 (fontified nil)) . 2729) (undo-tree-id9 . -3) (undo-tree-id10 . -3) (undo-tree-id11 . -3) (#("oooo" 0 4 (fontified t)) . 2732) (undo-tree-id12 . -3) (undo-tree-id13 . -3) (undo-tree-id14 . -3)) nil (26452 30476 776561 0) 0 nil])
([nil nil ((2729 . 2736) (t 26452 30434 108323 217000)) nil (26452 30476 776553 0) 0 nil])
([nil nil ((#("  oooo
" 0 2 (fontified t) 2 6 (fontified t) 6 7 (fontified t)) . 2730) (undo-tree-id0 . -2) (undo-tree-id1 . -7) (undo-tree-id2 . -7) (undo-tree-id3 . 1) (undo-tree-id4 . -7) (undo-tree-id5 . -5) (undo-tree-id6 . -7) (undo-tree-id7 . -7) (undo-tree-id8 . -6) 2732) nil (26452 30476 776552 0) 0 nil])
([nil nil ((2815 . 2816) (#("`" 0 1 (fontified t)) . 2815)) nil (26452 30476 776517 0) 0 nil])
([nil nil ((2825 . 2826)) nil (26452 30476 776510 0) 0 nil])
([nil nil ((92 . 96) (t 26452 30476 779327 209000)) nil (26452 30498 805386 0) 0 nil])
([nil nil ((#("oooo" 0 4 (fontified t)) . 92) (undo-tree-id3 . -3) (undo-tree-id4 . -3) (undo-tree-id5 . -3) (undo-tree-id6 . -3)) nil (26452 30498 805385 0) 0 nil])
([nil nil ((2815 . 2816) (#("\"" 0 1 (face font-lock-string-face fontified t)) . 2815) (undo-tree-id2 . -1) (t 26452 30476 779327 209000)) nil (26452 30498 805382 0) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . 2825) (undo-tree-id0 . -1) (undo-tree-id1 . -1)) nil (26452 30498 805377 0) 0 nil])
([nil nil ((2619 . 2621) (2612 . 2619) (2610 . 2612) (2610 . 2611) 2618 (t 26452 30498 808446 782000)) nil (26452 30518 253261 0) 0 nil])
([nil nil ((1223 . 1226) (t 26452 30518 254948 746000)) nil (26452 30602 480421 0) 0 nil])
([nil nil ((#("iii" 0 3 (fontified t)) . 1223) (undo-tree-id4 . -2) (undo-tree-id5 . -2) (undo-tree-id6 . -2)) nil (26452 30602 480420 0) 0 nil])
([nil nil ((1223 . 1226) (t 26452 30518 254948 746000)) nil (26452 30602 480418 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 1223)) nil (26452 30602 480417 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 1223) (undo-tree-id2 . -1) (undo-tree-id3 . -1)) nil (26452 30602 480416 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 1223)) nil (26452 30602 480414 0) 0 nil])
([nil nil ((2836 . 2838) (2815 . 2836) (#("p" 0 1 (fontified t)) . -2815) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 2816 (2804 . 2816) (2802 . 2804) (2802 . 2803) 2806) nil (26452 30602 480412 0) 0 nil])
([nil nil ((2841 . 2843)) nil (26452 30616 692446 0) 0 nil])
([nil nil ((#("  ;;(setq evil-undo-system 'undo-tree))
" 0 2 (fontified t) 2 4 (face font-lock-comment-delimiter-face fontified t) 4 5 (face font-lock-comment-face fontified t) 5 9 (face font-lock-comment-face fontified t) 9 21 (face font-lock-comment-face fontified t) 21 40 (face font-lock-comment-face fontified t)) . 2839) (undo-tree-id17 . -39) (undo-tree-id18 . -3) (undo-tree-id19 . -3) (undo-tree-id20 . -3) (undo-tree-id21 . -40) 2842 (t 26452 30602 483584 365000)) nil (26452 30622 55063 0) 0 nil] [nil nil ((2789 . 2792) (t 26452 30602 483584 365000)) ((#("ooo" 0 3 (fontified t)) . 2789) (undo-tree-id14 . -2) (undo-tree-id15 . -2) (undo-tree-id16 . -2)) (26452 30616 425729 0) 0 nil])
([nil nil ((2999 . 3001) (2991 . 2999) (2988 . 2991) (2981 . 2988) (2978 . 2981) (2976 . 2978) (#("t" 0 1 (face font-lock-builtin-face fontified t)) . -2976) (undo-tree-id41 . -1) 2977 (2969 . 2977) (2966 . 2969) (2963 . 2966) (2942 . 2963) (2941 . 2942) (t 26452 30618 877316 50000) 2917) nil (26452 30856 965148 0) 0 nil] [nil nil ((1 . 5) (t 26452 30618 877316 50000)) ((#("uuuu" 0 4 (fontified t)) . 1) (undo-tree-id10 . -3) (undo-tree-id11 . -3) (undo-tree-id12 . -3)) (26452 30621 945992 0) 0 nil])
nil
([nil nil ((#("  (evil-lead
" 0 12 (fontified t) 12 13 (fontified t)) . 2989) (undo-tree-id34 . 1) (undo-tree-id35 . -3) (undo-tree-id36 . -12) (undo-tree-id37 . -12) (undo-tree-id38 . -12) (undo-tree-id39 . -11) (undo-tree-id40 . -12) 3000) nil (26452 30856 965145 0) 0 nil])
nil
([nil nil ((#("(use-package evil-leader
" 0 1 (fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 24 (face font-lock-constant-face fontified t) 24 25 (fontified t)) . 2942) (undo-tree-id32 . -24) (undo-tree-id33 . -25)) nil (26452 30856 965141 0) 0 nil])
([nil nil ((#("  :ensure t
" 0 2 (fontified t) 2 9 (face font-lock-builtin-face fontified t) 9 11 (fontified t) 11 12 (fontified t)) . 2942) (undo-tree-id29 . -11) (undo-tree-id30 . -11) (undo-tree-id31 . -12)) nil (26452 30856 965139 0) 0 nil])
([nil nil ((#("  :config
" 0 2 (fontified t) 2 9 (face font-lock-builtin-face fontified t) 9 10 (fontified t)) . 2942) (undo-tree-id19 . -10) (undo-tree-id20 . -10) (undo-tree-id21 . -10) (undo-tree-id22 . -9) (undo-tree-id23 . -10) (undo-tree-id24 . -10) (undo-tree-id25 . -10) (undo-tree-id26 . -10) (undo-tree-id27 . -9) (undo-tree-id28 . -10)) nil (26452 30856 965136 0) 0 nil])
([nil nil ((2872 . 2876) (#("C" 0 1 (face font-lock-string-face fontified t)) . -2872) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("P" 0 1 (face font-lock-string-face fontified t)) . -2873) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -2874) (undo-tree-id17 . -1) (undo-tree-id18 . -1) 2875 (2865 . 2875) (2855 . 2865) (2840 . 2855) (2837 . 2840)) nil (26452 30856 965128 0) 0 nil])
([nil nil ((2877 . 2878)) nil (26452 30856 965113 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -2946) (undo-tree-id44 . -1) (undo-tree-id45 . -1) 2947 (2945 . 2947) (2928 . 2945) (2926 . 2928) (2909 . 2926) (2901 . 2909) (2900 . 2901) (#("i" 0 1 (fontified t)) . -2900) (undo-tree-id46 . -1) 2901 (2900 . 2901) (2886 . 2900) (#("d" 0 1 (fontified t)) . -2886) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("e" 0 1 (fontified t)) . -2887) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (#("f" 0 1 (fontified t)) . -2888) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (#("i" 0 1 (fontified t)) . -2889) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (#("n" 0 1 (fontified t)) . -2890) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (#("e" 0 1 (fontified t)) . -2891) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) 2892 (#("-" 0 1 (fontified t)) . -2892) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (#("k" 0 1 (fontified t)) . -2893) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (#("e" 0 1 (fontified t)) . -2894) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (#("y" 0 1 (face font-lock-keyword-face fontified t)) . -2895) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (#(" " 0 1 (fontified t)) . -2896) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (#("'" 0 1 (fontified t)) . -2897) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (#("n" 0 1 (fontified t)) . -2898) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (#("o" 0 1 (fontified t)) . -2899) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (#("r" 0 1 (fontified t)) . -2900) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (#("m" 0 1 (fontified t)) . -2901) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (#("a" 0 1 (fontified t)) . -2902) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (#("l" 0 1 (fontified t)) . -2903) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (#(" " 0 1 (fontified t)) . -2904) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (#("'" 0 1 (fontified t)) . -2905) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (#("g" 0 1 (fontified t)) . -2906) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (#("l" 0 1 (fontified t)) . -2907) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (#("o" 0 1 (fontified t)) . -2908) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (#("b" 0 1 (fontified t)) . -2909) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (#("a" 0 1 (fontified t)) . -2910) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (#("l" 0 1 (fontified t)) . -2911) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (#(" " 0 1 (fontified t)) . -2912) (undo-tree-id171 . -1) 2913 (2905 . 2913) (2901 . 2905) (2880 . 2901) (2877 . 2880) (t 26452 30856 967382 414000)) nil (26452 31026 327048 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 2945) (undo-tree-id42 . -1) (undo-tree-id43 . -1)) nil (26452 31026 326966 0) 0 nil])
([nil nil ((2946 . 2947)) nil (26452 31026 326943 0) 0 nil])
([nil nil ((2928 . 2929) (#("'" 0 1 (fontified t)) . 2928) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (t 26452 31026 329662 587000)) nil (26452 31042 532288 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 2928) (undo-tree-id172 . -1) (undo-tree-id173 . -1)) nil (26452 31042 532282 0) 0 nil])
([nil nil ((2928 . 2929) (t 26452 31042 533530 303000)) nil (26452 31085 305239 0) 0 nil])
([nil nil ((2940 . 2941) (t 26452 31085 307104 991000)) nil (26452 31182 274123 0) 0 nil])
([nil nil ((3007 . 3008) (3000 . 3006) (2984 . 3000) (#("'" 0 1 (fontified t)) . -2984) (undo-tree-id6 . -1) 2985 (2971 . 2985) (2950 . 2971) (2947 . 2950) (t 26452 31182 277387 398000)) nil (26452 31488 687815 0) 0 nil])
([nil nil ((3061 . 3071) (#("a" 0 1 (fontified t)) . -3061) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 3062 (3049 . 3062) (#("0" 0 1 (fontified t)) . -3049) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#(" " 0 1 (fontified t)) . -3050) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 3051 (3045 . 3051) (3031 . 3045) (3010 . 3031) (3007 . 3010)) nil (26452 31488 687811 0) 0 nil])
([nil nil ((3011 . 3025) (#("global-se" 0 9 (fontified t)) . -3011) (undo-tree-id0 . -9) (undo-tree-id1 . -9) (undo-tree-id2 . -9) (undo-tree-id3 . -9) (undo-tree-id4 . -9) 3020 (#("t" 0 1 (fontified t)) . -3020) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 3021 (3011 . 3021) (#("evil-global-set-key" 0 6 (fontified t) 6 19 (fontified t)) . 3011) (undo-tree-id10 . -19) (undo-tree-id11 . -19) (undo-tree-id12 . -18) (t 26452 31488 689953 130000)) nil (26452 31540 187959 0) 0 nil])
([nil nil ((#("'normal " 0 8 (fontified t)) . 3026) (undo-tree-id20 . -7) (t 26452 31540 191314 995000)) nil (26452 31587 467579 0) 0 nil])
([nil nil ((#("(global-set-key (kbd \"C-i\") 'universal-argument)" 0 1 (fontified t) 1 15 (fontified t) 15 21 (fontified t) 21 26 (face font-lock-string-face fontified t) 26 48 (fontified t)) . 3010) (undo-tree-id49 . -47) (undo-tree-id50 . -1) (undo-tree-id51 . -15) (undo-tree-id52 . -1) (undo-tree-id53 . 33) (undo-tree-id54 . -48)) nil (26452 31595 668161 0) 0 nil] [nil nil ((#("(global-set-key (kbd \"C-i\") 'universal-argument))" 0 1 (fontified t) 1 15 (fontified t) 15 21 (fontified t) 21 26 (face font-lock-string-face fontified t) 26 49 (fontified t)) . 3010) (undo-tree-id13 . -48) (undo-tree-id14 . -1) (undo-tree-id15 . -15) (undo-tree-id16 . -1) (undo-tree-id17 . 34) (undo-tree-id18 . -49) (undo-tree-id19 . -49)) ((3010 . 3059)) (26452 31587 467520 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3007) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#(" " 0 1 (fontified t)) . -3008) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#(" " 0 1 (fontified t)) . -3009) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) 3010) nil (26452 31595 668155 0) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 2719 . 2720) (nil fontified nil 2672 . 2720) (2672 . 2720) 2671) nil (26452 31595 668123 0) 0 nil])
([nil nil ((2672 . 2673)) nil (26452 31595 668118 0) 0 nil])
([nil current ((#("(global-set-key (kbd \"C-i\") 'universal-argument)
" 0 21 (fontified t) 21 26 (face font-lock-string-face fontified t) 26 47 (fontified t) 47 48 (rear-nonsticky t fontified t) 48 49 (fontified t)) . 2673) (undo-tree-id55 . -47) (undo-tree-id56 . -48) (undo-tree-id57 . 49) (undo-tree-id58 . -47) (undo-tree-id59 . -47) (undo-tree-id60 . -11) (undo-tree-id61 . -11) (undo-tree-id62 . -49) 2684 (t 26452 31595 670758 562000)) nil (26452 31640 602948 0) 0 nil])
nil
